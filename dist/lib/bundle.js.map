{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/cannon.js","webpack:///./js/cannon_ball.js","webpack:///./js/enemy.js","webpack:///./js/game.js","webpack:///./js/game_view.js","webpack:///./js/index.js","webpack:///./js/moving_object.js","webpack:///./js/util.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS;;;AAGT;;AAEA;AACA;;;;;;;;;;;;ACrHA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,yCAAyC;AACzC,uDAAuD;AACvD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;AC5FA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;;;;;;;;;;;ACxDA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B,2CAA2C;AACzE;AACA;AACA,+BAA+B,4BAA4B;AAC3D,sBAAsB,cAAc,2BAA2B;AAC/D;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,uBAAuB;AAC1C,qBAAqB,uBAAuB;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B,2BAA2B;AACrD,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;;;;;;;;;;;;ACpJA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAoB,sBAAsB;AAC1C,KAAK;;AAEL;AACA,+BAA+B;;AAE/B,6BAA6B,UAAU,yBAAyB,EAAE;AAClE;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACtDA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;;;;;;;;;;;;ACbF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./js/index.js\");\n","// const MovingObject = require('./moving_object');\nconst CannonBall = require('./cannon_ball');\nconst Enemy = require('./enemy');\nconst Util = require(\"./util\");\n\n\nclass Cannon{\n  constructor(options){\n    // this.radius = Cannon.RADIUS;\n    this.vel = [0, 0];\n    this.color = 'black';\n    this.game = options.game;\n    this.pos = options.pos;\n    this.angle = 0;\n    this.ctx = options.ctx;\n  }\n\n  draw(ctx){\n    // ctx.fillStyle = this.color;\n    // ctx.beginPath();\n    // ctx.arc(\n    //   this.pos[0], this.pos[1], this.radius, 0 , 2 * Math.PI, true\n    // );\n    //\n    // ctx.fill();\n\n    ctx.fillStyle = this.color;\n    this.ctx.beginPath();\n    this.ctx.ellipse(this.pos[0], this.pos[1], 10, 25, this.angle*5 * Math.PI/180, 0, 2 * Math.PI);\n    this.ctx.stroke();\n    this.ctx.fill();\n\n    ctx.fillStyle = 'brown';\n    ctx.beginPath();\n    ctx.arc(\n      this.pos[0], 595, 10, 0 , 2 * Math.PI, true\n    );\n\n    ctx.fill();\n\n    this.drawAngle();\n    // this.drawWind();\n    // this.drawRotation();\n  }\n\n  fireCannonBall(){\n    /*\n    */\n\n    const norm = Util.norm(this.vel);\n\n    const relVel = Util.scale(\n      Util.dir(this.vel),\n      CannonBall.SPEED\n    );\n\n    const cannonBallVel = [\n      relVel[0] + this.vel[0], relVel[1] + this.vel[1]\n    ];\n\n    // debugger;\n    let dupPos = Array.from(this.pos);\n\n    const cannonBall = new CannonBall({\n      pos: dupPos,\n      vel: [1,0],\n      color: this.color,\n      game: this.game,\n      angle: this.angle\n    });\n\n    this.game.add(cannonBall);\n  }\n\n  rotate(move){\n    this.angle += move[1];\n\n    console.log(\"angle:\", this.angle);\n    // this.pos[0] += move[0];\n    // this.pos[1] += move[1];\n    this.vel[0] += move[0];\n    this.vel[1] += move[1];\n    /*\n    rotation of cannon\n    */\n  }\n\n  drawAngle(){\n    this.ctx.font = \"16px Arial\";\n    this.ctx.fillStyle = \"#0095DD\";\n    this.ctx.fillText(\"Angle: \"+this.angle* 5, 8, 20);\n  }\n\n  isCollidedWith(otherObject){\n    let centerDist = Util.dist(this.pos, otherObject.pos);\n    return centerDist < (this.radius + otherObject.radius);\n  }\n\n\n\n  // drawRotation(){\n  //   this.ctx.save();\n  //   this.ctx.translate(50, 450);\n  //   this.ctx.fillStyle = \"black\";\n  //   this.ctx.beginPath();\n  //   this.ctx.ellipse(100, 100, 20, 50, this.angle*5 * Math.PI/180, 0, 2 * Math.PI);\n  //   this.ctx.stroke();\n  //   this.ctx.fill();\n  //   this.ctx.restore();\n  // }\n\n  move(){/*undefined since cannon is not a moving object */}\n\n\n}\n\nCannon.RADIUS = 15;\nmodule.exports = Cannon;\n","const MovingObject = require('./moving_object');\n\nconst DEFAULTS = {\n  COLOR: 'black',\n  RADIUS: 5,\n  SPEED: 15\n};\n\n\n\nclass CannonBall extends MovingObject {\n  constructor(options = {}){\n    // let radian = Math.PI * (options.angle * 5)/ 180;\n    // options.pos[0] = Math.cos(radian)*options.pos[0] + options.pos[0];\n    // options.pos[1] = Math.sin(radian)*options.pos[1] + options.pos[1];\n    options.color = DEFAULTS.COLOR;\n    /**/\n    options.pos = options.pos;\n    options.radius = DEFAULTS.RADIUS;\n    options.vel = options.vel;\n    super(options);\n    this.angle = options.angle;\n    this.radian = Math.PI * (90- this.angle)/180;\n    this.airTime = 0;\n    //\n    this.pos[0] = Math.cos(this.radian)*this.pos[0] + this.pos[0];\n    this.pos[1] = this.pos[1] + 2;\n    // this.pos[1] = Math.sin(this.radian)*this.pos[1] + this.pos[1];\n    //\n    console.log(options.vel[0]);\n    this.verticalVelocity = Math.sin(this.radian) * options.vel[0];\n    this.horizontalVelocity = Math.cos(this.radian) * options.vel[0];\n\n    this.windRadian = Math.PI * this.game.windAngle / 180;\n    this.windVerticalVelocity = Math.sin(this.windRadian) * this.game.windVelocity;\n    this.windHorizontalVelocity = Math.cos(this.windRadian)* this.game.windVelocity;\n    // debugger;\n    // console.log(\"windRadian\", this.windRadian);\n    // console.log(\"windVerticalVelocity\", this.windVerticalVelocity);\n    // console.log(\"windHorizontalVecloity\", this.windHorizontalVelocity);\n  }\n\n  // collidedWith(otherObject){\n  //   // this.game.remove(otherObject);\n  // }\n  updateCannonBall(){\n    let gravity = 2.75 * (this.airTime);\n    this.vel[0] += this.horizontalVelocity;\n    this.vel[1] += (-1 * this.verticalVelocity) + gravity;\n    // debugger;\n    // console.log(\"horizontal\", this.vel[0]);\n    // console.log(\"vertical\", this.vel[1]);\n\n  }\n\n  draw(ctx) {\n    // let radian = Math.PI * (this.angle * 5)/ 180;\n    // this.pos[0] = Math.cos(radian)*20; + this.pos[0];\n    // this.pos[1] = Math.sin(radian)*50 + this.pos[1]; //+ this.pos[1];\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.arc(\n      this.pos[0], this.pos[1], this.radius, 0 , 2 * Math.PI, true\n    );\n\n    ctx.fill();\n  }\n\n  move(timeDelta) {\n      // debugger;\n    this.updateCannonBall();\n    this.airTime += 1*60/5000;\n    const velocityScale = timeDelta / 30;//NORMAL_FRAME_TIME_DELTA,\n    const  offsetX = this.vel[0] * velocityScale +this.windHorizontalVelocity;\n    const  offsetY = this.vel[1] * velocityScale + this.windVerticalVelocity;\n    // console.log(\"offsetX\", offsetX);\n    // console.log(\"offsetY\", offsetY);\n    // debugger;\n    this.pos = [this.pos[0] + offsetX, this.pos[1] + offsetY];\n    if (this.game.isOutOfBounds(this.pos)) {\n      // console.log(\"removing cannonball\");\n      // debugger\n      this.remove();\n      // }\n    }\n  }\n}\n\nCannonBall.SPEED = 15;\nCannonBall.RADIUS = 10;\nconst NORMAL_FRAME_TIME_DELTA = 1000 / 60;\n\nmodule.exports = CannonBall;\n","const MovingObject = require('./moving_object');\n\nclass Enemy extends MovingObject{\n  constructor(options){\n    options.radius = Enemy.RADIUS;\n    options.vel = [-1, 0];\n    options.color = 'brown';\n    // .game = options.game;\n    // this.pos = options.pos;\n    super(options);\n  }\n\n  draw(ctx){\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.arc(\n      this.pos[0], this.pos[1], this.radius, 0 , 2 * Math.PI, true\n    );\n\n    ctx.fill();\n  }\n\n  move(timeDelta) {\n  // timeDelta is number of milliseconds since last move\n  // if the computer is busy the time delta will be larger\n  // in this case the MovingObject should move farther in this frame\n  // velocity of object is how far it should move in 1/60th of a second\n  const velocityScale = timeDelta /30,//NORMAL_FRAME_TIME_DELTA,\n      offsetX = this.vel[0] * velocityScale,\n      offsetY = this.vel[1] * velocityScale;\n      // console.log(\"moving enemy\");\n\n  this.pos = [this.pos[0] + offsetX, this.pos[1] + offsetY];\n  // console.log(this.pos[0]);\n  if (this.pos[0] < 200) {\n    console.log(\"YOU LOSE ENEMY REACHED YOU!\");\n    window.clearInterval(this.game.enemiesCreation);\n    this.game.enemies = [];\n    // window.cancelAnimationFrame(window.animation);\n\n    // this.game\n    // console.log(\"GAME OVER\");\n    // cancelAnimationFrame(window.animation);\n  }\n  if (this.game.isOutOfBounds(this.pos)) {\n    // console.log(\"removing cannonball\");\n    // debugger\n    this.remove();\n    // }\n  }\n}\n}\n\nEnemy.RADIUS = 30;\n\n\nmodule.exports = Enemy;\n","const Cannon = require('./cannon');\nconst CannonBall = require('./cannon_ball');\nconst Enemy = require('./enemy');\n\nclass Game {\n  constructor(ctx){\n    this.ctx = ctx;\n    this.cannon = new Cannon({pos: [120, 575], game: this, ctx: this.ctx});\n    // this.ram = ;\n    this.cannonballs = [];\n    // this.enemy = new Enemy({pos: [750, 580], game: this});\n    this.enemies = [];//[new Enemy({pos: [950,570], game: this})];\n    this.addEnemies();\n\n    this.score = 1;\n    this.windVelocity = (Math.random() * 2).toFixed(2);\n    this.windAngle = Math.round(Math.random() * 360);\n\n\n  }\n\n  moveObjects(delta) {\n    this.allObjects().forEach((object) => {\n      object.move(delta);\n    });\n  }\n\n  allObjects() {\n    return [].concat(this.cannon, this.cannonballs, this.enemies);\n  }\n\n  checkCollisions() {\n    const allObjects = this.allObjects();\n    for (let i = 0; i < allObjects.length; i++) {\n      for (let j = 0; j < allObjects.length; j++) {\n        const obj1 = allObjects[i];\n        const obj2 = allObjects[j];\n\n        if (!(obj1 instanceof Cannon || obj2 instanceof Cannon)) {\n          // if (obj1 instanceof CannonBall && obj2 instanceof Enemy)\n          if(obj1 !== obj2)\n            if (obj1.isCollidedWith(obj2)) {\n              const collision = obj1.collidedWith(obj2);\n              if (collision) return;\n            }\n        }\n\n        // if(obj1 instanceof Cannon || obj2 instanceof Cannon){\n        //   console.log(\"check collision\", obj1, obj2);\n        //   if(obj1 != obj2 && !(obj1 instanceof CannonBall) && !(obj2 instanceof CannonBall)){\n        //     if (obj1.isCollidedWith(obj2)){\n        //       console.log(\"GAME OVER\", obj1, \"collidedwith\", obj2);\n        //     }\n        //   }\n        // }\n      }\n    }\n  }\n\n  remove(object){\n    if (object instanceof CannonBall){\n      if(this.cannonballs.indexOf(object)!== -1)\n      this.cannonballs.splice(this.cannonballs.indexOf(object), 1);\n    }else if (object instanceof Enemy){\n      if (this.enemies.indexOf(object) !== -1)\n      this.enemies.splice(this.enemies.indexOf(object), 1);\n    }\n  }\n\n  add(object){\n    // debugger;\n    if (object instanceof CannonBall){\n      this.cannonballs.push(object);\n    }\n    if (object instanceof Enemy){\n      this.enemies.push(object);\n    }\n  }\n\n  addEnemies(){\n    let that = this;\n    this.enemiesCreation = setInterval(function(){\n      that.add(new Enemy({pos: [950,570], game: that}));\n    }, 3000);\n  }\n\n  isOutOfBounds(pos) {\n    return (pos[0] < 0) || (pos[1] < 0) ||\n      (pos[0] > Game.DIM_X) || (pos[1] > Game.DIM_Y);\n  }\n\n  step(delta){\n    this.moveObjects(delta);\n    this.checkCollisions();\n  }\n\n  draw(ctx){\n    // this.ctx = ctx;\n    ctx.clearRect(0, 0, Game.DIM_X, Game.DIM_Y);\n    // debugger;\n    ctx.fillStyle = Game.BG_COLOR;\n    ctx.fillRect(0,0, Game.DIM_X, Game.DIM_Y);\n    // this.cannon.draw(ctx);\n    this.drawWind();\n    this.drawCastle();\n    this.allObjects().forEach(function(object) {\n      object.draw(ctx);\n    });\n  }\n\n  drawWind(){\n    this.ctx.font = \"16px Arial\";\n    this.ctx.fillStyle = \"white\";\n    this.ctx.fillText(this.windVelocity, 465, 90);\n\n    this.ctx.save();\n    /*translate to center of canvas?*/\n    // this.ctx.translate(150, 100);\n    // this.ctx.translate(400,300);\n    this.ctx.translate(475,125);\n    this.ctx.rotate((this.windAngle-90) * Math.PI/180);\n\n    let arrow = document.getElementById('arrow');\n    this.ctx.fillStyle = \"yellow\";\n    // this.ctx.fillRect(0,0,100,100);\n    this.ctx.drawImage(arrow, -25,-25, 50,50);\n    this.ctx.restore();\n  }\n\n  drawCastle(){\n    let castle = document.getElementById(\"castle\");\n    this.ctx.drawImage(castle, 0, 505, 100,100);\n  }\n\n  endGame(){\n\n  }\n\n  // nextLevel(){\n  // }\n}\n\n\n\nGame.DIM_X = 1000;\nGame.DIM_Y = 600;\nGame.BG_COLOR = 'lightblue';\n\nmodule.exports = Game;\n","class GameView {\n  constructor(game, ctx){\n    this.ctx = ctx;\n    this.game = game;\n    this.cannon = this.game.cannon;\n    this.animation;\n  }\n\n  bindKeyHandlers(){\n    const cannon = this.cannon;\n\n    Object.keys(GameView.MOVES).forEach((k) => {\n      const move = GameView.MOVES[k];\n      key(k, () => { cannon.rotate(move);});\n    });\n\n    key(\"space\", () => {\n      cannon.fireCannonBall();});\n\n      // key(g, function () { debugger; cannon.fireCannonBall(); });\n  }\n\n  start() {\n    this.bindKeyHandlers();\n    this.lastTime = 0;\n    window.animation = requestAnimationFrame(this.animate.bind(this));\n  }\n\n  animate(time){\n    // console.log(\"animating\");\n    const timeDelta = time - this.lastTime;\n    this.game.step(timeDelta);\n\n    // debugger;\n    this.game.draw(this.ctx);\n    // this.game.cannon.draw(this.ctx);\n    this.lastTime = time;\n\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  // stopAnimation(){\n    // window.cancelAnimationFrame(window.animation);\n  // }\n\n}\n\nGameView.MOVES = {\n  w: [0, -1],\n  s: [0, 1],\n  a: [-1, 0],\n  d: [1, 0]\n};\n\nmodule.exports = GameView;\n","const Game = require('./game');\nconst GameView = require('./game_view');\n\ndocument.addEventListener(\"DOMContentLoaded\", function(event) {\n  const canvasEl = document.getElementById('game-canvas');\n  canvasEl.width = Game.DIM_X;\n  canvasEl.height = Game.DIM_Y;\n\n  const ctx = canvasEl.getContext(\"2d\");\n  const game = new Game(ctx);\n  new GameView(game, ctx).start();\n  // let game = new Game();\n  // game.startGame();\n });\n","const Util = require('./util');\n// const Enemy = require('./enemy');\n\nconst Cannon = require('./cannon');\nconst CannonBall = require('./cannon_ball');\n\nclass MovingObject {\n  constructor(options){\n    this.pos = options.pos;\n    this.vel = options.vel;\n    this.radius = options.radius;\n    this.color = options.color;\n    this.game = options.game;\n  }\n\n  collidedWith(otherObject){\n    // debugger;\n    // console.log(this, \"colliding with\", otherObject);\n    if (otherObject !== this) {\n      this.game.remove(otherObject);\n      this.game.remove(this);\n      let that = this;\n    }\n\n    // if(otherObject instanceof Cannon){\n    //   console.log(\"GAME OVER!!!!\");\n    //   this.game.remove(this);\n    // }\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.arc(\n      this.pos[0], this.pos[1], this.radius, 0 , 2 * Math.PI, true\n    );\n\n    ctx.fill();\n  }\n\n  move(timeDelta) {\n  // timeDelta is number of milliseconds since last move\n  // if the computer is busy the time delta will be larger\n  // in this case the MovingObject should move farther in this frame\n  // velocity of object is how far it should move in 1/60th of a second\n  const velocityScale = timeDelta /30,//NORMAL_FRAME_TIME_DELTA,\n      offsetX = this.vel[0] * velocityScale,\n      offsetY = this.vel[1] * velocityScale;\n\n  this.pos = [this.pos[0] + offsetX, this.pos[1] + offsetY];\n  if (this.game.isOutOfBounds(this.pos)) {\n    // console.log(\"removing cannonball\");\n    // debugger\n    this.remove();\n    // }\n  }\n}\n\n  isCollidedWith(otherObject){\n    let centerDist = Util.dist(this.pos, otherObject.pos);\n    return centerDist < (this.radius + otherObject.radius);\n  }\n\n  remove(){\n    this.game.remove(this);\n  }\n}\nconst NORMAL_FRAME_TIME_DELTA = 1000 / 60;\nmodule.exports = MovingObject;\n","const Util = {\n  dist(pos1, pos2){\n    return Math.sqrt(\n      Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n    );\n  },\n\n  // Find the length of the vector.\n  norm(vec) {\n    return Util.dist([0, 0], vec);\n  },\n  dir(vec) {\n    const norm = Util.norm(vec);\n    return Util.scale(vec, 1 / norm);\n  },\n  scale(vec, m) {\n    return [vec[0] * m, vec[1] * m];\n  },\n};\n\nmodule.exports = Util;\n"],"sourceRoot":""}